/* Using the pseudo-class :root to define rules at the highest level of specificity. */
:root {
--primary-bkgd-clr: hsl(284, 16%, 33%);
--primary-txt-clr: 	hsl(0, 2%, 88%);
--alt-txt-clr: hsl(286, 31%, 61%);
--dark-clr: 	hsl(286, 26%, 23%);
--pseudo-clr: 	hsl(300, 1%, 39%);
--primary-font: "neue-haas-grotesk-display", sans-serif;
--pseudo-font: "vox", sans-serif;
background-color: var(--primary-bkgd-clr);
}

/* applys my primary font to the entire html doc. */
html {
    font-family: var(--primary-font);
}

body {
    overflow-x: hidden;
}

/* styles my header to be across the entire top of the page. */
header {
    display: inline;
    position: relative;
    width: 100%;
    justify-content: left;
    background-color: var(--dark-clr);
    box-shadow: 0.1rem 1px var(--alt-txt-clr);
}

.primary-logo-container {
    padding: 1.5rem;
    margin: 0;
    background-color: hsl(286, 46%, 18%);
    box-shadow: .15rem 0 1px var(--primary-bkgd-clr);
}

/* Styles my logo. */
.primary-logo {
    color: #2e132e;
    filter: drop-shadow(0 0 .2rem var(--alt-txt-clr));
}

/* "turns off" the menu icon */
.mobile-nav-toggle {
    display: none;
}

/* Styles my nav as a whole. */
nav {
    position: relative;
    margin-bottom: 0;
    float: right;
}

/* Styles the ul inside my nav element. */
nav .primary-nav li {
    position: relative;
    display: block;
    align-content: center;
}

/* adds decorative lines between nav items. */
nav .primary-nav li:not(:first-child)::after{
    content: ""; 
    border: .25em solid var(--pseudo-clr);
    border-width: 0 0 .25em .25em;
    position: absolute; 
    top: -3px; 
    right: 0; 
    width: 100%;
  }

/* Styles the a links inside the list items in the nav. */
nav .primary-nav li a {
    position: relative;
    font-size: 1.4em;
    display: block;
    padding: 1em;
    width: clamp(1em, 50% 3em);
    margin-left: 1rem;
    color: var(--alt-txt-clr);
    text-decoration: none;
}

/* Adds a media querry that adjusts the nav and adds the mobile-nav-toggle button in at smaller screen sizes. */
@media (max-width: 35em) {
    .primary-nav {
        position: fixed;
        z-index: 1000;
        inset: 0 0 0 32%;
        background: hsl(300 42% 13% / 0.9);
        flex-direction: column;
        padding: min(30vh, 8rem ) 3rem;

        transform: translateX(100%);
        transition: transform 450ms ease-in-out;
    }
    .primary-nav[data-visible="true"] {
        transform: translateX(0%);
    }

    @supports (backdrop-filter: blur(.25rem)) {
        .primary-nav {
            background: hsl(300 42% 13% / 0.5);
            backdrop-filter: blur(.25rem);
        }
    }

    .mobile-nav-toggle {
        display: block;
        position: absolute;
        z-index: 9999;
        background: url("/assets/images/menuIcon.png");
        background-repeat: no-repeat;
        align-content: center;
        width: 3.5em;
        border: 0;
        aspect-ratio: 1;
        top: 2rem;
        right: 2rem;
    }
}



main {
    color: var(--primary-txt-clr);
}

main .pseudo-false::before {
    content: "<html>";
    margin-left: 1.5rem;
    margin-top: .5rem;
}

main .pseudo-false::after {
    content: "<body>";
    margin-left: 2.45rem;
}

main h1 {
    font-size: 2.4rem;
    font-weight: 200;
    margin: 10rem 0 1.5rem 3.5rem;
}

.hacker {
    color: var(--alt-txt-clr);
    --webkit-text-stroke-width: 1px var(--primary-txt-clr);
    text-shadow: -1px 1px 2px var(--alt-txt-clr);
    
}

main h1::before {
    content: "<h1>";
}

main h1::after {
    content: "</h1>";
}

main h2 {
    font-size: 1.3rem;
    font-weight: 200;
    margin: 0 0 25rem 3.5rem;
    position: relative;
}

main h2::before {
    content: "<h2>";
}

main h2::after {
    content: "</h2>";
    }

main .section-heading {
    font-size: 5.7em;
    margin-left: 1.5rem;
    color: var(--alt-txt-clr);
    opacity: 40%;
    filter: drop-shadow(-.15rem -.15rem .08rem var(--primary-txt-clr));
    display: inline;
}

.h3-before {
    margin-left: 3.5rem;
}

.h3-after {
    display: inline;
}

#about {
    font-family: var(--primary-font);
    margin: 1rem 0 10rem 3.5rem;
    width: 70%;
    line-height: 1.15em;
}

#about::before, #skills::before {
    content: "<p>";
}

#about::after, #skills::after {
    content: "</p>";
}

#contact-link {
    color: var(--primary-txt-clr);
    text-decoration: none;
}

#contact-link:hover {
    cursor: pointer;
}

#skills {
    font-family: var(--primary-font);
    margin: 1rem 0 2em 3.5rem;
    width: 70%;
    line-height: 1.15em;
}

.skills-tree {
    margin-bottom: 14rem;
}
.skills-tree ul {
    list-style: none;
    position: relative;
    
}

.skills-tree ul li {
    position: absolute;
}
.skills-tree ul .html-logo-container {
    transform: translateX(150px);
}

.skills-tree ul .css-logo-container {
    transform: translate(100px, 90px);
}

.skills-tree ul .js-logo-container {
    transform: translate(200px, 90px);
}

.html-logo-container, .css-logo-container, .js-logo-container {
    width: 20%;
}

.html-logo, .css-logo, .js-logo {
    width: 80%;
    height: 80%;
    object-fit: cover;
}

.form-container {
    display: flex;
    justify-content: center;
    margin-top: 1.25em;
}

form {
    text-align: center;
}

input[type="text"] ,select, textarea {
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    Width: 80%;
    padding: .6rem 1.2rem;
    margin-bottom: .8rem;
    display: inline-block;
    border: 2px solid var(--dark-clr);
    border-radius: .35rem;
    background-color: hsl(286, 46%, 18%, 0.2);
    color: var(--alt-txt-clr);
    resize: none;
}

input[type="text"]:focus ,select:focus, textarea:focus {
    border: 2px solid var(--alt-txt-clr);
    filter: drop-shadow(0rem 0rem 0.15rem var(--dark-clr));
    color: var(--alt-txt-clr);
}

input[type="text"]::placeholder ,select::placeholder, textarea::placeholder {
    color: var(--alt-txt-clr);
}

form label {
    color: var(--primary-txt-clr);
    font-size: 1.15em;
    display: block;
    margin-bottom: .8rem;
}

#fname, #lname, #company, #country, #details {
    display: inline-block;
}

#details {
    height: 9rem;
}

.submit {
    width: 30%;
    text-align: center;
    justify-content: center;
    margin: 1em 0;
    background-color: hsl(286, 46%, 18%, 0.5);
    color: var(--primary-txt-clr);
    padding: .6rem 1.2rem;
    border: 2px solid var(--dark-clr);
    border-radius: .35rem;
}

.submit:hover {
    box-shadow: inset 0 -.25em .45em var(--pseudo-clr);
}

#preform::before {
    content: "<form>";
    margin-left: 3.5rem;
}

#form-section::after {
    content: "</form>";
    margin-left: 3.5rem;
    font-size: 1rem;
    color: var(--pseudo-clr);
    font-family: var(--pseudo-font);
    z-index: -1;
}

#false-end {
    margin-top: 3rem;
    margin-bottom: 2rem;
}

#false-end::before {
    content: "</body>";
    display: block;
    margin-left: 2.45rem;
}

#false-end::after {
    content: "</html>";
    display: block;
    margin-left: .5rem;
}

main .pseudo-false::before, main .pseudo-false::after, main h1::before, main h2::before, .h3-before, #about::before, #skills::before, #preform::before, #false-end::before {
    display: block;
    font-size: 1rem;
    color: var(--pseudo-clr);
    font-family: var(--pseudo-font);
    z-index: -1;
    margin-block: .25rem;
}

main h1::after, main h2::after, .h3-after, #about::after, #skills::after, #false-end::after {
    font-size: medium;
    color: var(--pseudo-clr);
    font-family: var(--pseudo-font);
    z-index: -1;
    margin-inline: .25rem;
}

/* Used to more specifically style my flex items. */
.flex {
    display: flex;
    gap: var(--gap, 1rem);
}

/* Allows me to visually remove the menu button at larger screen sizes while maintaining accessability for screen readers. */
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
}